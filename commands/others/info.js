import admins from '../../configs/admins.js';
import emojis from '../../configs/emojis.js';
import settings from '../../configs/settings.js';
import { createRequire } from 'module';
import {
	ActionRowBuilder,
	ButtonBuilder,
	SlashCommandSubcommandBuilder,
	ButtonStyle,
	codeBlock,
	bold,
	EmbedBuilder,
} from 'discord.js';
import { respondSuccess } from '../../utils/respond-messages.js';
import Command from '../../utils/Command.js';
import Guild from '../../models/guild.js';

const require = createRequire(import.meta.url);
const pkg = require('../../package.json');

export default new Command(
	new SlashCommandSubcommandBuilder()
		.setName('info')
		.setDescription('bot info')
		.setNameLocalization('ru', '–∏–Ω—Ñ–æ')
		.setDescriptionLocalization('ru', '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ'),
	run
);

export async function run(interaction) {
	const client = interaction.client;
	const components = new ActionRowBuilder().setComponents([
		new ButtonBuilder()
			.setLabel('Github')
			.setStyle(ButtonStyle.Link)
			.setURL('https://github.com/vare-team/whooves')
			.setEmoji('üåÄ'),
		new ButtonBuilder()
			.setLabel('–°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏')
			.setStyle(ButtonStyle.Link)
			.setURL('https://discordapp.com/invite/8KKVhTU')
			.setEmoji('üí¨'),
	]);

	const devs = await Promise.all(admins.map(x => client.users.fetch(x)));

	const fields = [
		{
			name: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:',
			value: codeBlock(
				'c',
				//TODO add statistics
				`–ü–∏–Ω–≥:             ${Math.round(client.ws.ping)} ms\n–ö–æ–º–∞–Ω–¥ –∏—Å–ø–æ–ª–Ω–µ–Ω–æ: ${0}\n–ò–∑ –Ω–∏—Ö –æ—à–∏–±–æ–∫:    ${0}`
			),
			inline: true,
		},
		{
			name: '–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:',
			value: codeBlock(
				'c',
				`–í–µ—Ä—Å–∏—è –±–æ—Ç–∞:    ${pkg.version}\n` +
					`Discord.js:     ${pkg.dependencies['discord.js']}\n` +
					`–í–µ—Ä—Å–∏—è Node:    ${process.version.replace("'v'", " ''")}`
			),
			inline: true,
		},
		{
			name: '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏:',
			value: devs.map(x => `${bold(x.tag)}`).join('\n'),
			inline: false,
		},
	];
	const embed = new EmbedBuilder().setAuthor({
		name: `${client.user.username} - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ`,
		iconURL: client.user.displayAvatarURL(),
	});

	if (interaction.inGuild()) {
		const guild = await Guild.findByPk(interaction.guildId);

		fields.push({
			name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏:',
			value:
				`–ö–∞–Ω–∞–ª –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: ${guild?.logchannel ? `<#${guild.logchannel}>` : emojis.error}\n` +
				`–§–∏–ª—å—Ç—Ä –ø–ª–æ—Ö–∏—Ö —Å–ª–æ–≤: ${bold(isPresent(guild?.settings, settings.badwords))}\n` +
				`–ò—Å–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–∏–∫–Ω–µ–π–º–æ–≤: ${bold(isPresent(guild?.settings, settings.usernamechecker))}`,
			inline: true,
		});
	}

	embed.addFields(fields);

	await respondSuccess(interaction, embed, false, [components]);
}

/**
 * @param settings {number}
 * @param parameter {number}
 * @returns {string}
 */
function isPresent(settings, parameter) {
	return settings & parameter ? emojis.ready : emojis.error;
}
