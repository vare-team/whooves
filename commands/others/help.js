exports.help = {
	name: 'help',
	description: '–õ–∏—Å—Ç –∫–æ–º–∞–Ω–¥, –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–∑–Ω–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥–µ.',
	aliases: ['commands', 'h'],
	usage: '(–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã)',
	dm: 1,
	tier: 0,
	cooldown: 2
};

const { readdirSync, lstatSync } = require("fs"),
tiers = {
	'-3': '–í–ª–∞–¥–µ–ª—å—Ü—É —Å–µ—Ä–≤–µ—Ä–∞',
	'-2': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º —Å–µ—Ä–≤–µ—Ä–∞',
	'-1': '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º —Å–µ—Ä–≤–µ—Ä–∞',
	'0': '–í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º',
	'1': '–ù–µ –≤–∞–∂–Ω–æ',
	'2': '–¶–∞—Ä—è–º –±–∞—Ç—é—à–∫–∞–º'
},
modules = {
	dev: '–ö–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤',
	fun: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
	games: '–ò–≥—Ä—ã',
	pony: '–ü–æ–Ω–∏-–∫–æ–º–∞–Ω–¥—ã',
	mod: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è',
	social: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ',
	others: '–û—Å—Ç–∞–ª—å–Ω—ã–µ'
};

exports.run = (client, msg, args) => {

	if (!args.length) {
		let embed = new client.userLib.discord.RichEmbed()
			.setColor(client.userLib.colors.inf)
			.setDescription(`–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å \`${msg.flags.prefix}help [–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã]\` —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!`)
			.setTitle(':paperclip: –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:')
			.setFooter(msg.author.tag, msg.author.displayAvatarURL);

		readdirSync('./commands/').filter(dir => lstatSync(`./commands/${dir}`).isDirectory())
			.filter(el => el != 'dev' || el == 'dev' && client.userLib.admins.hasOwnProperty(msg.author.id))
			.filter(el => client.commands.filter(cmd => cmd.help.module == el).size)
			.forEach((el, index) => {
			embed.addField(
				`${index+1}. ${modules[el] ? modules[el] : el}`,
				client.commands.filter(cmd => cmd.help.module == el).map(cmd => `\`${cmd.help.name}\``).join(", ")
			);
		});

		msg.channel.send({embed, split: true });
		return;
	}


	const name = args[0].toLowerCase();
	const command = client.commands.get(name) || client.commands.find(c => c.help.aliases && c.help.aliases.includes(name));

	if (!command) {
		client.userLib.retError(msg.channel, msg.author, '–í–æ–∑–º–æ–∂–Ω–æ, –≤ –¥—Ä—É–≥–æ–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ª–∏–Ω–∏–∏ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –∏ –µ—Å—Ç—å, –Ω–æ —Ç—É—Ç –ø–æ–∫–∞ –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏.');
		return;
	}

	let embed = new client.userLib.discord.RichEmbed()
		.setColor(client.userLib.colors.inf)
		.setTitle("üîé –ö–æ–º–∞–Ω–¥–∞: " + command.help.name)
		.setFooter(msg.author.tag, msg.author.displayAvatarURL);

	if (command.help.description) embed.setDescription(command.help.description);
	if (command.help.aliases.length) embed.addField("–ü—Å–µ–≤–¥–æ–Ω–∏–º—ã", command.help.aliases.join(', '), true);
	if (command.help.usage) embed.addField("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", `${msg.flags.prefix}${command.help.name} \`\`${command.help.usage}\`\``, true);
	embed.addField("–î–æ—Å—Ç—É–ø–Ω–æ", tiers[command.help.tier]);
	embed.addField("–í—Ä–µ–º—è –º–µ–∂–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è–º–∏", `–°–µ–∫—É–Ω–¥: \`\`${command.cooldown || 3}\`\``);

	msg.channel.send(embed);
};