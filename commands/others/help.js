exports.help = {
	name: 'help',
	description: '–õ–∏—Å—Ç –∫–æ–º–∞–Ω–¥, –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–∑–Ω–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥–µ.',
	usage: [{ type: 'text', opt: 1, name: '–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã' }],
	dm: 1,
	tier: 0,
	cooldown: 2,
};

exports.command = {
	name: exports.help.name,
	description: exports.help.description,
	options: [
		{
			name: '–∫–æ–º–∞–Ω–¥–∞',
			description: '–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã',
			type: 3,
		},
	],
};

const { readdirSync, lstatSync } = require('fs'),
	tiers = {
		'-3': '–í–ª–∞–¥–µ–ª—å—Ü—É —Å–µ—Ä–≤–µ—Ä–∞',
		'-2': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º —Å–µ—Ä–≤–µ—Ä–∞',
		'-1': '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º —Å–µ—Ä–≤–µ—Ä–∞',
		0: '–í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º',
		1: '–ù–µ –≤–∞–∂–Ω–æ',
		2: '–¶–∞—Ä—è–º –±–∞—Ç—é—à–∫–∞–º',
	},
	modules = {
		dev: '–ö–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤',
		fun: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
		games: '–ò–≥—Ä—ã',
		pony: '–ü–æ–Ω–∏-–∫–æ–º–∞–Ω–¥—ã',
		mod: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è',
		social: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ',
		others: '–û—Å—Ç–∞–ª—å–Ω—ã–µ',
		images: '–†–∞–±–æ—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏',
	};

exports.run = (client, interaction) => {
	if (!interaction.options.getString('–∫–æ–º–∞–Ω–¥–∞')) {
		let embed = new client.userLib.discord.MessageEmbed()
			.setColor(client.userLib.colors.inf)
			.setDescription(`–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å \`/help [–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã]\` —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!`)
			.setTitle(':paperclip: –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:');

		readdirSync('./commands/')
			.filter(dir => lstatSync(`./commands/${dir}`).isDirectory())
			.filter(
				el =>
					el !== 'dev' || (el === 'dev' && client.userLib.admins.hasOwnProperty(client.userLib.getUser(interaction).id))
			)
			.filter(el => client.commands.filter(cmd => cmd.help.module === el).size)
			.forEach((el, index) => {
				embed.addField(
					`${index + 1}. ${modules[el] ? modules[el] : el}`,
					client.commands
						.filter(cmd => cmd.help.module === el)
						.map(cmd => `\`${cmd.help.name}\``)
						.join(', ')
				);
			});

		// client.userLib.replyInteraction(interaction, embed, true);
		interaction.reply({ embeds: [embed], ephemeral: true });
		return;
	}

	const command = client.commands.get(interaction.options.getString('–∫–æ–º–∞–Ω–¥–∞'));

	if (!command) {
		client.userLib.retError(
			interaction,
			'–í–æ–∑–º–æ–∂–Ω–æ, –≤ –¥—Ä—É–≥–æ–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ª–∏–Ω–∏–∏ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –∏ –µ—Å—Ç—å, –Ω–æ —Ç—É—Ç –ø–æ–∫–∞ –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏.'
		);
		return;
	}

	let embed = new client.userLib.discord.MessageEmbed()
		.setColor(client.userLib.colors.inf)
		.setTitle('üîé –ö–æ–º–∞–Ω–¥–∞: ' + command.help.name);

	if (command.help.description) embed.setDescription(command.help.description);
	embed.addField('–î–æ—Å—Ç—É–ø–Ω–æ', tiers[command.help.tier]);
	embed.addField('–í—Ä–µ–º—è –º–µ–∂–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è–º–∏', `–°–µ–∫—É–Ω–¥: \`\`${command.help.cooldown || 3}\`\``);

	interaction.reply({ embeds: [embed], ephemeral: true });
};
