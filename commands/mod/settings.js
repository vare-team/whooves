exports.help = {
	name: 'settings',
	description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞.\n\`\`prefix [prefix] - –ø—Ä–µ—Ñ–∏–∫—Å –±–æ—Ç–∞\nlog [#channel/off] - –ª–æ–≥ –∫–∞–Ω–∞–ª\nbadwords [on/off] - —Ñ–∏–ª—å—Ç—Ä –º–∞—Ç–∞\nusernamechecker [on/off] - –∞–Ω—Ç–∏—é–Ω–∏–∫–æ–¥ –≤ –Ω–∏–∫–∞—Ö\`\`',
	aliases: ['set'],
	usage: [
		{type: 'text', opt: 0, name: '–ø–∞—Ä–∞–º–µ—Ç—Ä'},
		{type: 'text', opt: 0, name: '—Å–æ—Å—Ç–æ—è–Ω–∏–µ'}
	],
	dm: 0,
	tier: -2,
	cooldown: 5
};

const parametrs = ['prefix', 'log', 'badwords', 'usernamechecker'],
	status = ['on', 'off'],
	normalizeParametrs = {
		'badwords': '–§–∏–ª—å—Ç—Ä –ø–ª–æ—Ö–∏—Ö —Å–ª–æ–≤',
		'usernamechecker': '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–æ–≤'
	};

exports.run = async (client, msg, args) => {
	if (parametrs.indexOf(args[0]) == -1) {
		client.userLib.retError(msg, '–¢–∞–∫–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: ' + parametrs.join(', '));
		return;
	}

	if (args[0] === 'prefix' && args[1].length > 5) {
		client.userLib.retError(msg, '–ü—Ä–µ—Ñ–∏–∫—Å –±–æ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –±–æ–ª–µ–µ 5 —Å–∏–º–≤–æ–ª–æ–≤!');
		return;
	}

	if (args[0] === 'log' && args[1] !== 'off' && !msg.mentions.channels.first()) {
		client.userLib.retError(msg, '–í—ã –¥–æ–ª–∂–Ω—ã —É–ø–æ–º—è–Ω—É—Ç—å –∫–∞–Ω–∞–ª –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å \`\`off\`\`!');
		return;
	}

	if (parametrs.slice(2).indexOf(args[0]) != -1 && status.indexOf(args[1]) == -1) {
		client.userLib.retError(msg, '–°—Ç–∞—Ç—É—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≤–≤–µ–¥—ë–Ω –Ω–µ –≤–µ—Ä–Ω–æ. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã: ' + status.join(', '));
		return;
	}

	let embed = new client.userLib.discord.MessageEmbed().setColor(client.userLib.colors.suc).setAuthor('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏').setTimestamp().setFooter(msg.author.tag, msg.author.displayAvatarURL());

	switch (args[0]) {
		case 'prefix':
			client.userLib.db.update(`guilds`, {guildId: msg.guild.id, prefix: args[1] == 'w.' ? null : args[1]}, () => {});
			embed.setDescription(`–¢–µ–ø–µ—Ä—å –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ —ç—Ç–æ **${args[1]}**`).setTitle('–ü—Ä–µ—Ñ–∏–∫—Å –±–æ—Ç–∞');
			break;
		case 'log':
			if (args[1] === 'off')
				client.userLib.sendLogChannel('commandUse', msg.guild, {user: {tag: msg.author.tag, id: msg.author.id, avatar: msg.author.displayAvatarURL()}, channel: {id: msg.channel.id}, content: '–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ª–æ–≥ –∫–∞–Ω–∞–ª–∞'});

			client.userLib.db.update(`guilds`, {guildId: msg.guild.id, logchannel: args[1] === 'off' ? null : msg.mentions.channels.first().id}, () => {});
			embed.setTitle('–õ–æ–≥ –∫–∞–Ω–∞–ª').setDescription(args[1] === 'off' ? `–õ–æ–≥ –∫–∞–Ω–∞–ª –æ—Ç–∫–ª—é—á—ë–Ω.` : `–õ–æ–≥ –∫–∞–Ω–∞–ª —Ç–µ–ø–µ—Ä—å ${msg.mentions.channels.first()}`);
			break;
		default:
			if (!await client.userLib.setSettings(msg.guild.id, args[0], args[1] === 'on')) {
				client.userLib.retError(msg, '–ü–∞—Ä–∞–º–µ—Ç—Ä —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–º –∑–Ω–∞—á–µ–Ω–∏–∏!');
				return;
			}

			embed.setDescription(`${normalizeParametrs[args[0]]} **${args[1] === 'on' ? '–≤–∫–ª—é—á–µ–Ω' : '–≤—ã–∫–ª—é—á–µ–Ω'}**!`).setTitle(normalizeParametrs[args[0]]);
			break;
	}

	msg.channel.send(embed);
};